---
import MovieTarget from '../components/movie/MovieTarget.astro';
import PersonTarget from '../components/person/personTarget.astro';
import TvTarget from "../components/tv/tvTarget.astro";
import Layout from '../layouts/Layout.astro';
import { getMovies, getTv, getPerson } from "../services/api";

export const prerender = true

const dataMovies = await getMovies("1");
const dataTv = await getTv("1");
const dataPerson = await getPerson("1");


let contMovie = 0;
let contTv = 0;
let contPerson = 0;

---

<Layout 
title="Movie Info." 
description="Pagina para buscar infomracion de peliculas nuevas, antiguas y populares"
metaImage="https://i.ibb.co/2Wq16xL/image.png"
metaImageAlt="Pagina Principal de Movies Info"
>
	<main class= { "grid justify-items-center gap-3 sm:gap-1" }>
		<h1 class={ "text-4xl" }>Bienvenido a <span class="text-gradient">Movies Info</span></h1>
		<article class={ "grid grid-cols-1 gap-2 lg:grid-cols-2 lg:gap-8 xl:grid-cols-3" } > 
			<section class={ "grid justify-items-center" }>
				<h2 class={ "text-3xl text-center" }>Movies</h2>
				<div class={ "grid grid-cols-1 sm:grid-cols-2 gap-8 mt-6 mb-4" }>
					{
						dataMovies.map((movie) => (
							contMovie++,
							(contMovie < 5) ? <MovieTarget title={ movie.title } date={ movie.release_date } poster_path={movie.	poster_path} adult={movie.adult} id={movie.id}/> : null
						))
					}
				</div>
				<a href="/movie">
					<button class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800">
						<span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
						Ver Mas
						</span>
					</button>
					
				</a>
			</section>
			<section class={ "grid justify-items-center" }>
				<h2 class={ "text-3xl text-center" }>Tv</h2>
				<div class={ "grid grid-cols-1  sm:grid-cols-2 gap-8 mt-6 mb-4" }>
					{
						dataTv.map((tv) => (
							contTv++,
							(contTv < 5) ? <TvTarget name={ tv.name } first_air_date={ tv.first_air_date } poster_path={tv.poster_path} adult={tv.adult} id={tv.id}/> : null
						))
					}
				</div>
				<a href="/tv/">
					<button class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800">
						<span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
						Ver Mas
						</span>
					</button>
					
				</a>
			</section>
			<section class={ "grid justify-items-center" }>
				<h2 class={ "text-3xl text-center" }>Person</h2>
				<div class={ "grid grid-cols-1 sm:grid-cols-2 gap-8 mt-6 mb-4" }>
					{
						dataPerson.map((Person) => (
							contPerson++,
							(contPerson < 5) ? <PersonTarget name={ Person.name } id={Person.id} profile_path={Person.profile_path} movies={Person.known_for}/> : null
						))
					}
				</div>
				<a href="/person/">
					<button class="relative inline-flex items-center justify-center p-0.5 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-purple-600 to-blue-500 group-hover:from-purple-600 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800">
						<span class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
						Ver Mas
						</span>
					</button>
					
				</a>
			</section>
		</article>
	</main>


</Layout>



<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 100%;
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
		font-weight: bold;
	}
</style>
